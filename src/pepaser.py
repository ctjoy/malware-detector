NUM_FILE_HEADER_FEATURES = 7
NUM_OPTIONAL_HEADER_FEATURES = 30


def pa(file_name):
    '''
    Input     str     file_name       :   the path of PE-flie

    Output    dist    file_header     :   the feathers in FILE_HEADER
              list    flags           :   the FLAGS
              dist    optional_header :   the feathers in OPTIONAL_HEADER
              list    import_table    :   the import table
    '''
    
    num_fhf = NUM_FILE_HEADER_FEATURES
    num_ohf = NUM_OPTIONAL_HEADER_FEATURES

    file = open(file_name, 'r', encoding = 'UTF-8')

    file_header = dict()
    flags = list()
    optional_header = dict()
    import_table = list()

    while True:
        if "FILE_HEADER" in file.readline():
            file.readline()
            file.readline()
            break

    for i in range(1, num_fhf + 1):
        feature = file.readline().split()
        print(feature)
        file_header[feature[2][:-1]] = int(feature[3], 16)

    flags_list = file.readline().split()
    for i in range(1, len(flags_list)):
        flags.append(flags_list[i])
    flags.append(flags_list[-1][:-1])


    while True:
        if "OPTIONAL_HEADER" in file.readline():
            file.readline()
            file.readline()
            break

    for i in range(1, num_ohf + 1):
        feature = file.readline().split()
        optional_header[feature[2][:-1]] = int(feature[3], 16)

    while True:
        if "Imported symbols" in file.readline():
            file.readline()
            file.readline()
            break

    while True:
        line = file.readline()
        if "dll" in line:
            import_item = line.split()
            import_item = import_item[0].rsplit('.', 1)
            import_table.append(import_item[0] + ' ' + import_item[1])
            continue

        if "Resource directory" in line:
            break

    return file_header, flags, optional_header, import_table


